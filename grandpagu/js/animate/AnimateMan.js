!function (a, b) { a.AnimateMan = function () { var a = this, c = [], d = []; this.Init = function () { this.EachAnimate(function (a) { a.Init() }) }, this.Add = function (a, e, f) { f === !1 ? d.push(a) : "number" == typeof e ? c[e] == b ? c[e] = new Array(a) : c[e].push(a) : c.push(new Array(a)) }, this.Get = function (a) { var d = b; return Cmn.Func.IsString(a) ? (this.EachAnimate(function (b) { b.Name == a && (d = b) }), d) : c[a] ? 1 == c[a].length ? c[a][0] : c[a] : b }, this.RunAutoRunAnimate = function () { $.each(d, function (a, b) { b.IsAutoRun === !0 && b.Start() }) }, this.Run = function (a, c) { var e, f, d = this.Get(a); if (d != b) for (Cmn.Func.IsArray(d) !== !0 && (d = new Array(d)), e = 0; e < d.length; e++) f = {}, $.extend(f, d[e]), f.OnComplete = c || function () { }, f.Start() }, this.RunQueue = function (d, e) { var f, g; return 0 == c.length || d >= c.length ? (e != b && null != e && e(), void 0) : (f = c[d], g = 0, f != b ? $.each(f, function (h, i) { i.OnComplete = function () { g++, g >= f.length && (d + 1 < c.length ? a.RunQueue(d + 1, e) : e != b && null != e && e()) }, i.Start() }) : a.RunQueue(d + 1, e), void 0) }, this.Pause = function () { this.EachAnimate(function (a) { a.Pause() }) }, this.Resume = function () { this.EachAnimate(function (a) { a.Resume() }) }, this.Stop = function () { this.EachAnimate(function (a) { a.Stop() }) }, this.Remove = function () { }, this.Clear = function () { c = [], d = [] }, this.ExitScene = function () { this.EachAnimate(function (a) { a.ExitScene() }) }, this.EachAnimate = function (a) { $.each(c, function (c, d) { d != b && $.each(d, function (b, c) { a(c) }) }), $.each(d, function (b, c) { a(c) }) } } }(window);