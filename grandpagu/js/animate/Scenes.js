!function (window, undefined) { window.Scenes = function (selector, speed, easing) { var LoadAnimateJs, LoadHtml, ScenesAfterShowAction, InitEasyAnimate, _Self = this, _SceneDom = $(selector), _Easing = easing || "swing", _AnimateJs = "", _IsSeachPlugIn = !1; this.IsInNormalQueue = !0, this.AnimateMan = new AnimateMan, this.Speed = speed || 800, this.ScenesNo = -1, this.ID = _SceneDom.attr("id"), this.HasLoad = !1, this.ScenesQueueName = "", AnimateFrame.CurScenes = this, this.OnLoadComplete = null, this.OnScenesShow = function () { }, this.OnScenesAfterShow = function () { }, this.OnScenesAfterHide = function () { }, this.OnQueueAnimateComplete = function () { }, this.OnJumpFromUrl = function () { }, this.Init = function (a) { var b, c, d; _Self.HasLoad === !1 ? (b = !1, c = !1, d = function () { 1 == b && 1 == c && (InitEasyAnimate(), _Self.HasLoad = !0, null != _Self.OnLoadComplete && _Self.OnLoadComplete(_Self), 0 == _Self.ScenesNo && ScenesAfterShowAction(), _Self.AnimateMan.Init(), a && a()) }, LoadHtml(function () { b = !0, d() }), LoadAnimateJs(_Self.ScenesNo, "Scenes/", function () { c = !0, d() })) : (_Self.AnimateMan.Init(), a && a()) }, LoadAnimateJs = function (scenesNo, path, loadComplete) { if ("true" !== _SceneDom.attr("LoadJs") && _SceneDom.attr("LoadJs") !== !0) return loadComplete != undefined && loadComplete(), void 0; var _path = path || ""; return "undefined" == $.type(_Self.ID) ? (loadComplete != undefined && loadComplete(), void 0) : (_path = _path + "" + _Self.ID + ".js", "" == _AnimateJs ? CmnAjax.GetFile(Cmn.Func.AddParamToUrl(_path, "r_=0.12"), function (fileContent) { _AnimateJs = "(function(window,scenes,undefined){" + fileContent.replace(/AnimateFrame\.CurScenes/g, "scenes") + "\r\n})(window,window.AnimateFrame.allScenes[" + scenesNo + "] )", eval(_AnimateJs), loadComplete != undefined && loadComplete() }, function () { loadComplete != undefined && loadComplete() }, !1) : (eval(_AnimateJs), loadComplete != undefined && loadComplete()), void 0) }, LoadHtml = function (a) { return "true" !== _SceneDom.attr("LoadHtml") && _SceneDom.attr("LoadHtml") !== !0 ? (a != undefined && a(), void 0) : (CmnAjax.GetFile("Scenes/" + _Self.ID + ".htm", function (b) { _SceneDom.html(b), a != undefined && a() }, function () { _SceneDom.html(""), a != undefined && a() }, !1), void 0) }, this.Show = function (a, b, c) { var d = this; ScenesSwitch[a](_SceneDom, this.Speed, _Easing, b, function () { d.OnScenesShow() }, function () { ScenesAfterShowAction(), c && c(d) }) }, this.Hide = function (a, b, c) { var d = this; ScenesSwitch[a](_SceneDom, this.Speed, _Easing, b, function () { }, function (a) { a.css({ opacity: "0", display: "none" }), c && c(d) }) }, ScenesAfterShowAction = function () { "undefined" != $.type(Cmn.PlugIn) && 0 == _IsSeachPlugIn && (Cmn.PlugIn.SeachPlugIn(_SceneDom), _IsSeachPlugIn = !0) }, InitEasyAnimate = function () { _SceneDom.find(".cmn-animate").each(function (index, item) { var _defCfg, _txt, _cfg = $(item).attr("cfg"); if ("string" == $.type(_cfg)) { if (_defCfg = { action: { styles: null, speed: 800, easing: "swing" }, loop: 0, index: 0, name: "easy", init: $(item).attr("style") || "", isAddQueue: !0 }, "string" == typeof _cfg && "" != _cfg) try { _cfg = eval("(" + _cfg + ")") } catch (err) { return _txt = "简易动画配置 cfg " + _defCfg.toString() + ".\n\n", _txt += "发现: " + err.message + "\n\n", _txt += "请检查是否是json格式不对 或者数组格式不对.\n\n", Cmn.Log(_txt), !1 } if (_defCfg = $.extend(_defCfg, _cfg), 1 == _defCfg.loop && (_defCfg.isAddQueue = !1), "string" == $.type(_defCfg.action)) try { _defCfg.action = eval("(" + _defCfg.action.toString() + ")") } catch (err) { return _txt = "简易动画配置 cfg=" + _defCfg + " 中.\n\n", _txt += "发现: " + err.message + "\n\n", _txt += "请检查是否是json格式不对 或者数组格式不对.\n\n", Cmn.Log(_txt), !1 } if ("array" != $.type(_defCfg.action) && "object" != $.type(_defCfg.action)) return _txt = "简易动画配置 _defCfg.action:" + _defCfg.action.toString() + "  中错误.\n\n", _txt += "请检查是否是json格式不对 或者数组格式不对.\n\n", Cmn.Log(_txt), !1; _Self.AnimateMan.Add(new EasyAnimate(item, _defCfg.action, _defCfg.init, _defCfg.loop, _defCfg.name), _defCfg.index, _defCfg.isAddQueue) } }) }, this.find = function (a) { return _SceneDom.find(a) }, this.RunQueueAnimate = function (a) { _Self.AnimateMan.RunQueue(a, _Self.OnQueueAnimateComplete) } } }(window);